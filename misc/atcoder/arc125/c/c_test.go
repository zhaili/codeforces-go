// Code generated by copypasta/template/atcoder/generator_test.go
package main

import (
	"fmt"
	"github.com/EndlessCheng/codeforces-go/main/testutil"
	"github.com/stretchr/testify/assert"
	"sort"
	"strings"
	"testing"
)

// 提交地址：https://atcoder.jp/contests/arc125/submit?taskScreenName=arc125_c
func Test_run(t *testing.T) {
	t.Log("Current test is [c]")
	testCases := [][2]string{
		{
			`3 2
2 3`,
			`2 1 3`,
		},
		{
			`5 1
4`,
			`5 4 3 2 1`,
		},
		{
			`5 4
1 3 4 5`,
			`1 3 2 4 5`,
		},
	}
	testutil.AssertEqualStringCase(t, testCases, 0, run)
}

// https://atcoder.jp/contests/arc125/tasks/arc125_c

func TestCheck(t *testing.T) {
	//return
	assert := assert.New(t)
	_ = assert

	testutil.DebugTLE = 0

	lis := func(a []int) int {
		dp := []int{}
		for _, v := range a {
			if p := sort.SearchInts(dp, v); p < len(dp) {
				dp[p] = v
			} else {
				dp = append(dp, v)
			}
		}
		return len(dp)
	}

	inputGenerator := func() (string, testutil.OutputChecker) {
		rg := testutil.NewRandGenerator()
		n := rg.Int(1, 9)
		k := rg.Int(1, n)
		rg.NewLine()
		rg.IntSliceOrdered(k, 1, n, true, true)
		return rg.String(), func(myOutput string) (_b bool) {
			// 检查 myOutput 是否符合题目要求
			// * 最好重新看一遍题目描述以免漏判 *
			// 对于 special judge 的题目，可能还需要额外跑个暴力来检查 myOutput 是否满足最优解等
			in := strings.NewReader(myOutput)

			myA := make([]int, n)
			for i := range myA {
				fmt.Fscan(in, &myA[i])
			}

			ans := lis(myA)
			if !assert.EqualValues(k, ans) {
				return
			}


			return true
		}
	}

	target := 0
	testutil.CheckRunResultsInfWithTarget(t, inputGenerator, target, run)
}
